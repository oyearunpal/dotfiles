{
  config,
  pkgs,
  lib,
  inputs,
  nixGL,
  ...
}: {
  nixGL = {
    packages = nixGL.packages;
    defaultWrapper = "mesa";
  };

  # Essential packages for a complete Hyprland setup
  home = {
    username = "irage";
    homeDirectory = "/home/irage";
    stateVersion = "23.11";
    packages = with pkgs; [
      # Core Hyprland packages
      (config.lib.nixGL.wrap alacritty)
      
      # Essential Wayland tools
      waybar
      rofi-wayland
      dunst
      kitty
      firefox
      
      # System utilities
      brightnessctl
      pamixer
      grim
      slurp
      wl-clipboard
      swww
      hyprpicker
      hyprcursor
      hypridle
      
      # Media and clipboard
      playerctl
      cliphist
      
      # Font for coding
      nerd-fonts.jetbrains-mono
      
      # Window management (for keyboard control)
      wmctrl
      xdotool
    ];
    
    # Session variables
    sessionVariables = {
      EDITOR = "nvim";
      BROWSER = "firefox";
      TERMINAL = "kitty";
      NIXOS_OZONE_WL = "1";
    };
  };

  programs.home-manager.enable = true;

  # Enable essential services
  services = {
    dunst.enable = true;
    # Disabled network-manager-applet service - handled by Hyprland exec-once instead
    # network-manager-applet.enable = true;
  };

  xdg.configFile."environment.d/envvars.conf".text = ''
    PATH="$HOME/.nix-profile/bin:$PATH"
  '';

  # Hyprland configuration
  wayland.windowManager.hyprland = {
    enable = true;
    package = config.lib.nixGL.wrap pkgs.hyprland;
    systemd.enable = true;
    xwayland.enable = true;
    
    settings = {
      # Variables
      "$mod" = "SUPER";
      "$terminal" = "kitty";
      "$fileManager" = "thunar";
      "$menu" = "rofi -show drun";
      
      # Monitor configuration
      monitor = [
        ",preferred,auto,1"
      ];

      # Environment variables for Wayland compatibility
      env = [
        "XCURSOR_SIZE,24"
        "HYPRCURSOR_SIZE,24"
        "GDK_BACKEND,wayland,x11,*"
        "QT_QPA_PLATFORM,wayland;xcb"
        "SDL_VIDEODRIVER,wayland"
        "CLUTTER_BACKEND,wayland"
        "XDG_CURRENT_DESKTOP,Hyprland"
        "XDG_SESSION_TYPE,wayland"
        "XDG_SESSION_DESKTOP,Hyprland"
        "QT_AUTO_SCREEN_SCALE_FACTOR,1"
        "QT_WAYLAND_DISABLE_WINDOWDECORATION,1"
        "NIXOS_OZONE_WL,1"
        "MOZ_ENABLE_WAYLAND,1"
      ];

      # General settings
      general = {
        gaps_in = 4;
        gaps_out = 8;
        border_size = 2;
        # Catppuccin Mocha colors
        "col.active_border" = "rgba(cba6f7ff) rgba(89b4faff) 45deg";
        "col.inactive_border" = "rgba(6c7086ff)";
        resize_on_border = true;
        allow_tearing = false;
        layout = "master";
      };

      # Decoration settings
      decoration = {
        rounding = 8;
        active_opacity = 1.0;
        inactive_opacity = 0.95;
        
        shadow = {
          enabled = true;
          range = 30;
          render_power = 3;
        };
        
        blur = {
          enabled = true;
          size = 6;
          passes = 3;
          new_optimizations = true;
          ignore_opacity = true;
          noise = 0.0117;
          contrast = 1.1;
          brightness = 1.2;
          popups = true;
          popups_ignorealpha = 0.6;
        };
      };

      # Animations
      animations = {
        enabled = true;
        
        bezier = [
          "myBezier, 0.05, 0.9, 0.1, 1.05"
          "linear, 0.0, 0.0, 1.0, 1.0"
          "wind, 0.05, 0.9, 0.1, 1.05"
          "winIn, 0.1, 1.1, 0.1, 1.1"
          "winOut, 0.3, -0.3, 0, 1"
          "slow, 0, 0.85, 0.3, 1"
          "overshot, 0.13, 0.99, 0.29, 1.1"
        ];
        
        animation = [
          "windows, 1, 6, wind, slide"
          "windowsIn, 1, 6, winIn, slide"
          "windowsOut, 1, 5, winOut, slide"
          "windowsMove, 1, 5, wind, slide"
          "border, 1, 10, linear"
          "borderangle, 1, 30, linear, loop"
          "fade, 1, 10, slow"
          "workspaces, 1, 6, wind"
          "specialWorkspace, 1, 6, wind, slidevert"
        ];
      };

      # Input configuration
      input = {
        kb_layout = "us";
        kb_variant = "";
        kb_model = "";
        kb_options = "caps:escape";
        kb_rules = "";
        
        follow_mouse = 1;
        sensitivity = 0;
        
        touchpad = {
          natural_scroll = false;
          disable_while_typing = true;
          tap-to-click = true;
          drag_lock = false;
        };
      };

      # Gestures
      gestures = {
        workspace_swipe = true;
        workspace_swipe_fingers = 3;
        workspace_swipe_distance = 300;
        workspace_swipe_invert = true;
        workspace_swipe_min_speed_to_force = 30;
        workspace_swipe_cancel_ratio = 0.5;
      };

      # Master layout configuration (optimal for productivity)
      master = {
        new_status = "master";
        new_on_top = true;
        no_gaps_when_only = false;
        orientation = "left";
        inherit_fullscreen = true;
        always_center_master = false;
        smart_resizing = true;
        drop_at_cursor = false;
      };

      # Dwindle as fallback
      dwindle = {
        pseudotile = true;
        preserve_split = true;
        smart_split = false;
        smart_resizing = true;
      };

      # Miscellaneous settings
      misc = {
        force_default_wallpaper = 0;
        disable_hyprland_logo = true;
        disable_splash_rendering = true;
        mouse_move_enables_dpms = true;
        key_press_enables_dpms = true;
        vrr = 1;
        enable_swallow = true;
        swallow_regex = "^(kitty)$";
        new_window_takes_over_fullscreen = 2;
        focus_on_activate = true;
      };

      # Keyboard-focused keybindings for productivity
      bind = [
        # System controls
        "$mod, Q, killactive"
        "$mod SHIFT, Q, exit"
        "$mod SHIFT, R, exec, hyprctl reload"
        
        # Quick application access
        "$mod, Return, exec, $terminal"
        "$mod, D, exec, $menu"
        "$mod, B, exec, firefox"
        "$mod, C, exec, google-chrome --enable-features=UseOzonePlatform --ozone-platform=wayland"
        
        # Application jumping (ALT + key for instant access)
        "$mod ALT, B, exec, hyprctl dispatch focuswindow class:^firefox$ || firefox"
        "$mod ALT, C, exec, hyprctl dispatch focuswindow class:^google-chrome$ || google-chrome"
        "$mod ALT, T, exec, hyprctl dispatch focuswindow class:^kitty$ || $terminal"
        
        # Cycle through windows of same application
        "$mod CTRL, B, exec, hyprctl dispatch cyclenext class:^firefox$"
        "$mod CTRL, C, exec, hyprctl dispatch cyclenext class:^google-chrome$"
        "$mod CTRL, T, exec, hyprctl dispatch cyclenext class:^kitty$"
        
        # Window management
        "$mod, Space, togglefloating"
        "$mod, F, fullscreen, 0"
        "$mod SHIFT, F, fullscreen, 1"
        "$mod, P, pseudo"
        "$mod, O, togglesplit"
        "$mod, Y, pin"
        
        # Master layout controls (essential for productivity)
        "$mod, M, layoutmsg, swapwithmaster"
        "$mod, I, layoutmsg, addmaster"
        "$mod, U, layoutmsg, removemaster"
        "$mod SHIFT, I, layoutmsg, orientationnext"
        "$mod SHIFT, U, layoutmsg, orientationprev"
        
        # Focus movement
        "$mod, left, movefocus, l"
        "$mod, right, movefocus, r"
        "$mod, up, movefocus, u"
        "$mod, down, movefocus, d"
        "$mod, h, movefocus, l"
        "$mod, l, movefocus, r"
        "$mod, k, movefocus, u"
        "$mod, j, movefocus, d"
        
        # Window movement
        "$mod SHIFT, left, movewindow, l"
        "$mod SHIFT, right, movewindow, r"
        "$mod SHIFT, up, movewindow, u"
        "$mod SHIFT, down, movewindow, d"
        "$mod SHIFT, h, movewindow, l"
        "$mod SHIFT, l, movewindow, r"
        "$mod SHIFT, k, movewindow, u"
        "$mod SHIFT, j, movewindow, d"
        
        # Window resizing
        "$mod CTRL, left, resizeactive, -20 0"
        "$mod CTRL, right, resizeactive, 20 0"
        "$mod CTRL, up, resizeactive, 0 -20"
        "$mod CTRL, down, resizeactive, 0 20"
        "$mod CTRL, h, resizeactive, -20 0"
        "$mod CTRL, l, resizeactive, 20 0"
        "$mod CTRL, k, resizeactive, 0 -20"
        "$mod CTRL, j, resizeactive, 0 20"
        
        # Group management
        "$mod, G, togglegroup"
        "$mod, Tab, changegroupactive, f"
        "$mod SHIFT, Tab, changegroupactive, b"
        
        # Special workspace (scratchpad)
        "$mod, S, togglespecialworkspace, magic"
        "$mod SHIFT, S, movetoworkspace, special:magic"
        
        # Screenshots
        ", Print, exec, grim -g \"$(slurp)\" - | wl-copy"
        "$mod, Print, exec, grim - | wl-copy"
        "SHIFT, Print, exec, grim -g \"$(slurp)\" ~/Pictures/$(date +'%s_grim.png')"
        
        # Media keys
        ", XF86AudioRaiseVolume, exec, pamixer -i 5"
        ", XF86AudioLowerVolume, exec, pamixer -d 5"
        ", XF86AudioMute, exec, pamixer -t"
        ", XF86AudioPlay, exec, playerctl play-pause"
        ", XF86AudioPause, exec, playerctl play-pause"
        ", XF86AudioNext, exec, playerctl next"
        ", XF86AudioPrev, exec, playerctl previous"
        ", XF86MonBrightnessUp, exec, brightnessctl set +10%"
        ", XF86MonBrightnessDown, exec, brightnessctl set 10%-"
        
        # Clipboard management
        "$mod, V, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy"
        "$mod SHIFT, C, exec, hyprpicker -a"
        
        # System utilities
        "$mod, grave, exec, $terminal -e btop"
        
        # Reload waybar
        "$mod SHIFT, W, exec, killall waybar && waybar"
      ] ++ (
        # Workspace bindings (1-10)
        builtins.concatLists (builtins.genList (
          x: let
            ws = let
              c = (x + 1) / 10;
            in
              builtins.toString (x + 1 - (c * 10));
          in [
            "$mod, ${ws}, workspace, ${toString (x + 1)}"
            "$mod SHIFT, ${ws}, movetoworkspace, ${toString (x + 1)}"
          ]
        ) 10)
      );

      # Mouse bindings
      bindm = [
        "$mod, mouse:272, movewindow"
        "$mod, mouse:273, resizewindow"
        "$mod ALT, mouse:272, resizewindow"
      ];

        # Optimized window rules for HFT workflow
      windowrulev2 = [
        # Terminals - Workspace 1 (main workspace)
        "workspace 1,class:^(kitty)$"
        "workspace 1,class:^(Alacritty)$"
        "opacity 0.95,class:^(kitty)$"
        "opacity 0.95,class:^(Alacritty)$"
        
        # Browsers - Workspace 2 (research/web)
        "workspace 2,class:^(firefox)$"
        "workspace 2,class:^(google-chrome)$"
        "opacity 0.98,class:^(firefox)$"
        "opacity 0.98,class:^(google-chrome)$"
        
        # Development - Workspace 3
        "workspace 3,class:^(code-oss)$"
        "workspace 3,class:^(Code)$"
        "workspace 3,title:^.*nvim.*$"
        
        # System monitoring - Workspace 4
        "workspace 4,title:^.*btop.*$"
        "workspace 4,title:^.*htop.*$"
        "workspace 4,title:^.*top$"
        
        # Communication - Workspace 5
        "workspace 5,class:^(discord)$"
        "workspace 5,class:^(slack)$"
        "workspace 5,class:^(teams)$"
        
        # Float rules for system dialogs
        "float,class:^(pavucontrol)$"
        "float,class:^(nm-applet)$"
        "float,class:^(blueman-manager)$"
        "float,title:^(Picture-in-Picture)$"
        
        # Size and position for floating windows
        "size 800 600,class:^(pavucontrol)$"
        "size 640 360,title:^(Picture-in-Picture)$"
        "center,class:^(pavucontrol)$"
        "pin,title:^(Picture-in-Picture)$"
        
        # Performance optimizations
        "immediate,class:^(steam_app).*"
        "nofocus,class:^(steam)$"
        
        # Focus rules for productivity
        "suppressevent maximize,class:.*"
      ];

      # Essential autostart applications
      exec-once = [
        # System services
        "/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1"
        "nm-applet --indicator"
        "blueman-applet"
        
        # Status bar and notifications
        "waybar"
        "dunst"
        
        # Wallpaper (create a default if doesn't exist)
        "swww-daemon"
        
        # Clipboard manager
        "wl-paste --type text --watch cliphist store"
        "wl-paste --type image --watch cliphist store"
        
        # Auto-start productivity setup
        "[workspace 1 silent] $terminal"
        "[workspace 2 silent] firefox"
        
        # Idle management
        "hypridle"
      ];
    };
  };

  # Hypridle configuration for automatic screen locking
  xdg.configFile."hypr/hypridle.conf".text = ''
    general {
        before_sleep_cmd = loginctl lock-session    # lock before suspend.
        after_sleep_cmd = hyprctl dispatch dpms on  # to avoid having to press a key twice to turn on the display.
    }

    listener {
        timeout = 300                                # 5min
        on-timeout = brightnessctl -s set 10         # set monitor backlight to minimum, avoid 0 on OLED monitor.
        on-resume = brightnessctl -r                 # monitor backlight restore.
    }

    listener {
        timeout = 600                                 # 10min
        on-timeout = hyprctl dispatch dpms off       # turn off screen when timeout has passed
    }

    listener {
        timeout = 1800                                # 30min
        on-timeout = systemctl suspend                # suspend pc
    }
  '';

  # Essential terminal configuration
  programs.kitty = {
    enable = true;
    settings = {
      font_family = "JetBrainsMono Nerd Font";
      font_size = 12;
      background_opacity = "0.9";
      # Catppuccin Mocha theme
      foreground = "#cdd6f4";
      background = "#1e1e2e";
      selection_foreground = "#1e1e2e";
      selection_background = "#f5e0dc";
      # Additional colors
      color0 = "#45475a";
      color1 = "#f38ba8";
      color2 = "#a6e3a1";
      color3 = "#f9e2af";
      color4 = "#89b4fa";
      color5 = "#f5c2e7";
      color6 = "#94e2d5";
      color7 = "#bac2de";
      color8 = "#585b70";
      color9 = "#f38ba8";
      color10 = "#a6e3a1";
      color11 = "#f9e2af";
      color12 = "#89b4fa";
      color13 = "#f5c2e7";
      color14 = "#94e2d5";
      color15 = "#a6adc8";
    };
  };

  # Application launcher
  programs.rofi = {
    enable = true;
    package = pkgs.rofi-wayland;
  };
}